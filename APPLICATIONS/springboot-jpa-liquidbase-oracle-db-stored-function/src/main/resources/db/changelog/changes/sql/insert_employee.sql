CREATE OR REPLACE FUNCTION insertEmpFunction(
  V_EMPNAME IN EMPLOYEE.EMP_NAME%TYPE
 ,V_EMPEMAIL IN EMPLOYEE.EMP_EMAIL%TYPE)RETURN VARCHAR
IS
  V_EMP_INSERT_MSG VARCHAR2(500);
  V_EMP_INSERT_COUNT NUMBER(10) DEFAULT 0;
  ID_EMP NUMBER(10) DEFAULT 0;
  V_EMP_MSG VARCHAR2(500);
  PRAGMA AUTONOMOUS_TRANSACTION;
BEGIN
     IF V_EMPNAME||V_EMPEMAIL IS NOT  NULL THEN

	     INSERT INTO EMPLOYEE (EMP_NO,EMP_NAME,EMP_EMAIL)
	     VALUES(SYSTEM.EMPLOYEE_SEQ.nextval,NVL(V_EMPNAME,'NOT AVAILABLE'),NVL(V_EMPEMAIL,'NOT AVAILABLE'))
	           RETURNING EMP_NO INTO ID_EMP;

	     V_EMP_INSERT_COUNT := SQL%ROWCOUNT;
	             IF V_EMP_INSERT_COUNT >0 THEN
	               SELECT EMP_NO ||' '|| EMP_NAME ||' '|| EMP_EMAIL  INTO V_EMP_MSG
                   FROM EMPLOYEE WHERE EMPLOYEE.EMP_NO = ID_EMP;
	                 V_EMP_INSERT_MSG:='EMPLOYEE INSERT SUCCESSFUL '||V_EMP_INSERT_COUNT ||' EMPLOYEE DATA '|| V_EMP_MSG;
	             ELSE
	                 V_EMP_INSERT_MSG:='EMPLOYEE NOT INSERT '||V_EMP_INSERT_COUNT;
	             END IF;
	     COMMIT;
	 ELSE
	      V_EMP_INSERT_MSG:='IMPROPER ARGUMENTS SUPPLIED TO FUNCTION';
	 END IF;
     RETURN (V_EMP_INSERT_MSG);
     EXCEPTION
        WHEN OTHERS THEN RAISE_APPLICATION_ERROR (-20001, V_EMPNAME||':$:'||V_EMPEMAIL|| ':$:' ||SQLERRM, TRUE) ;
END insertEmpFunction;
//