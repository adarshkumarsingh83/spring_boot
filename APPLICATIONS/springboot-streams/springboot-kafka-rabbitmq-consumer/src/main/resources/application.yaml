
spring:
  application:
    name: @spring.application.name@
  profiles:
    active: @spring.profile.active@

server:
  port: 8080

---
spring:
  application:
    name: @spring.application.name@
  profiles: rabbit
  cloud:
    stream:
      bindings:
        message-in:
          contentType: application/json
          destination: ${RABBITMQ_DESTINATION}
          group: ${RABBITMQ_GROUP}
          consumer:
            durableSubscription: true
            concurrency: 20
      binder:
        docker-rabbit:
          type: rabbit
          environment:
            spring:
              espark-rabbitmq:
                host: ${RABBITMQ_HOST}
                port: ${RABBITMQ_PORT}
                username: ${RABBITMQ_USER}
                password: ${RABBITMQ_PASSWORD}
---

spring:
  application:
    name: @spring.application.name@
  profiles: kafka
  cloud:
    stream:
      kafka:
        binder:
          brokers:  localhost:9092
          zkNodes:  localhost:2181
          minPartitionCount: 1
          replicationFactor: 1
          auto-create-topics: true
          auto-alter-topics: false
      bindings:
        message-in:
          contentType: application/json
          destination: espark-topic
          group: espark-group
          consumer:
            maxAttempts: 5
            backOffInitialInterval: 100
            defaultRetryable: false
            useNativeEncoding: true
            durableSubscription: true
            concurrency: 20
            autoStartup: true
            configuration:
              useNativeEncoding: true
              value.deserializer: com.espark.adarsh.converters.MessageDeSerializer
